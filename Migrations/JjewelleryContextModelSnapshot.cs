// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OnlineJewelleryShop.Models;

#nullable disable

namespace OnlineJewelleryShop.Migrations
{
    [DbContext(typeof(JjewelleryContext))]
    partial class JjewelleryContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("OnlineJewelleryShop.Models.Cart", b =>
                {
                    b.Property<string>("CartId")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4)")
                        .HasColumnName("cart_id");

                    b.Property<string>("CartOrderid")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("cart_orderid");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int")
                        .HasColumnName("quantity");

                    b.Property<decimal?>("Total")
                        .HasColumnType("decimal(18,0)")
                        .HasColumnName("total");

                    b.Property<string>("UserId")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4)")
                        .HasColumnName("user_id");

                    b.HasKey("CartId");

                    b.HasIndex("UserId");

                    b.ToTable("cart", (string)null);
                });

            modelBuilder.Entity("OnlineJewelleryShop.Models.CartItem", b =>
                {
                    b.Property<string>("cart_itemid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CartId")
                        .IsRequired()
                        .HasColumnType("varchar(4)");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ProductId")
                        .IsRequired()
                        .HasColumnType("varchar(4)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("cart_itemid");

                    b.HasIndex("CartId");

                    b.HasIndex("ProductId");

                    b.ToTable("CartItems");
                });

            modelBuilder.Entity("OnlineJewelleryShop.Models.Category", b =>
                {
                    b.Property<string>("CategoryId")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4)")
                        .HasColumnName("category_id");

                    b.Property<string>("CategoryDescription")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("category_description");

                    b.Property<string>("CategoryName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("category_name");

                    b.HasKey("CategoryId");

                    b.ToTable("category", (string)null);
                });

            modelBuilder.Entity("OnlineJewelleryShop.Models.Order", b =>
                {
                    b.Property<string>("OrderId")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4)")
                        .HasColumnName("order_id");

                    b.Property<DateTime?>("DeliveredDate")
                        .HasColumnType("datetime")
                        .HasColumnName("delivered_date");

                    b.Property<DateTime?>("OrderDate")
                        .HasColumnType("datetime")
                        .HasColumnName("order_date");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int")
                        .HasColumnName("quantity");

                    b.Property<decimal?>("Total")
                        .HasColumnType("decimal(18,0)")
                        .HasColumnName("total");

                    b.Property<string>("UserId")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4)")
                        .HasColumnName("user_id");

                    b.HasKey("OrderId");

                    b.HasIndex("UserId");

                    b.ToTable("orders", (string)null);
                });

            modelBuilder.Entity("OnlineJewelleryShop.Models.Product", b =>
                {
                    b.Property<string>("ProductId")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4)")
                        .HasColumnName("product_id");

                    b.Property<string>("CategoryId")
                        .IsRequired()
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4)")
                        .HasColumnName("category_id");

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("image_path");

                    b.Property<decimal?>("Price")
                        .IsRequired()
                        .HasColumnType("decimal(18,0)")
                        .HasColumnName("price");

                    b.Property<string>("ProdTypeId")
                        .IsRequired()
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4)")
                        .HasColumnName("prod_type_id");

                    b.Property<string>("ProductDescription")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("product_description");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("product_name");

                    b.HasKey("ProductId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("ProdTypeId");

                    b.ToTable("products", (string)null);
                });

            modelBuilder.Entity("OnlineJewelleryShop.Models.ProductDetail", b =>
                {
                    b.Property<string>("ProductDetailsId")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4)")
                        .HasColumnName("product_details_id");

                    b.Property<int?>("AvailQty")
                        .HasColumnType("int")
                        .HasColumnName("avail_qty");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<string>("Dimension")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("dimension");

                    b.Property<decimal?>("Price")
                        .IsRequired()
                        .HasColumnType("decimal(18,0)")
                        .HasColumnName("price");

                    b.Property<string>("ProductId")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4)")
                        .HasColumnName("product_id");

                    b.Property<string>("StatusId")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4)")
                        .HasColumnName("status_id");

                    b.HasKey("ProductDetailsId")
                        .HasName("PK__product___A0C27C440881675D");

                    b.HasIndex("ProductId");

                    b.HasIndex("StatusId");

                    b.ToTable("product_details", (string)null);
                });

            modelBuilder.Entity("OnlineJewelleryShop.Models.ProductOrder", b =>
                {
                    b.Property<string>("ProdOrderId")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4)")
                        .HasColumnName("prod_order_id");

                    b.Property<string>("OrderId")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4)")
                        .HasColumnName("order_id");

                    b.Property<decimal?>("Price")
                        .IsRequired()
                        .HasColumnType("decimal(18,0)")
                        .HasColumnName("price");

                    b.Property<string>("ProductId")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4)")
                        .HasColumnName("product_id");

                    b.HasKey("ProdOrderId")
                        .HasName("PK__product___3D27750A363FD9BB");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("product_order", (string)null);
                });

            modelBuilder.Entity("OnlineJewelleryShop.Models.ProductType", b =>
                {
                    b.Property<string>("ProdTypeId")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4)")
                        .HasColumnName("prod_type_id");

                    b.Property<string>("ProdTypeDescription")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("prod_type_description");

                    b.Property<string>("ProdTypeName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("prod_type_name");

                    b.HasKey("ProdTypeId")
                        .HasName("PK__product___D7B875BF6B90430A");

                    b.ToTable("product_type", (string)null);
                });

            modelBuilder.Entity("OnlineJewelleryShop.Models.Status", b =>
                {
                    b.Property<string>("StatusId")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4)")
                        .HasColumnName("status_id");

                    b.Property<string>("StatusName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("status_name");

                    b.HasKey("StatusId");

                    b.ToTable("status", (string)null);
                });

            modelBuilder.Entity("OnlineJewelleryShop.Models.User", b =>
                {
                    b.Property<string>("UserId")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4)")
                        .HasColumnName("user_id");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("address");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("country");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("email");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("first_name");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("last_name");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("password");

                    b.Property<string>("Phone")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("phone");

                    b.Property<string>("Province")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("province");

                    b.Property<string>("Role")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("role");

                    b.Property<string>("ZipCode")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("zip_code");

                    b.HasKey("UserId");

                    b.ToTable("users", (string)null);
                });

            modelBuilder.Entity("OnlineJewelleryShop.Models.Cart", b =>
                {
                    b.HasOne("OnlineJewelleryShop.Models.User", "User")
                        .WithMany("Carts")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__cart__user_id__48CFD27E");

                    b.Navigation("User");
                });

            modelBuilder.Entity("OnlineJewelleryShop.Models.CartItem", b =>
                {
                    b.HasOne("OnlineJewelleryShop.Models.Cart", "Cart")
                        .WithMany("CartItems")
                        .HasForeignKey("CartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OnlineJewelleryShop.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cart");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("OnlineJewelleryShop.Models.Order", b =>
                {
                    b.HasOne("OnlineJewelleryShop.Models.User", "User")
                        .WithMany("Orders")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__orders__user_id__45F365D3");

                    b.Navigation("User");
                });

            modelBuilder.Entity("OnlineJewelleryShop.Models.Product", b =>
                {
                    b.HasOne("OnlineJewelleryShop.Models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__products__catego__3E52440B");

                    b.HasOne("OnlineJewelleryShop.Models.ProductType", "ProdType")
                        .WithMany("Products")
                        .HasForeignKey("ProdTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__products__prod_t__3F466844");

                    b.Navigation("Category");

                    b.Navigation("ProdType");
                });

            modelBuilder.Entity("OnlineJewelleryShop.Models.ProductDetail", b =>
                {
                    b.HasOne("OnlineJewelleryShop.Models.Product", "Product")
                        .WithMany("ProductDetails")
                        .HasForeignKey("ProductId")
                        .HasConstraintName("FK__product_d__produ__4222D4EF");

                    b.HasOne("OnlineJewelleryShop.Models.Status", "Status")
                        .WithMany("ProductDetails")
                        .HasForeignKey("StatusId")
                        .HasConstraintName("FK__product_d__statu__4316F928");

                    b.Navigation("Product");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("OnlineJewelleryShop.Models.ProductOrder", b =>
                {
                    b.HasOne("OnlineJewelleryShop.Models.Order", "Order")
                        .WithMany("ProductOrders")
                        .HasForeignKey("OrderId")
                        .HasConstraintName("FK__product_o__order__4BAC3F29");

                    b.HasOne("OnlineJewelleryShop.Models.Product", "Product")
                        .WithMany("ProductOrders")
                        .HasForeignKey("ProductId")
                        .HasConstraintName("FK__product_o__produ__4CA06362");

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("OnlineJewelleryShop.Models.Cart", b =>
                {
                    b.Navigation("CartItems");
                });

            modelBuilder.Entity("OnlineJewelleryShop.Models.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("OnlineJewelleryShop.Models.Order", b =>
                {
                    b.Navigation("ProductOrders");
                });

            modelBuilder.Entity("OnlineJewelleryShop.Models.Product", b =>
                {
                    b.Navigation("ProductDetails");

                    b.Navigation("ProductOrders");
                });

            modelBuilder.Entity("OnlineJewelleryShop.Models.ProductType", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("OnlineJewelleryShop.Models.Status", b =>
                {
                    b.Navigation("ProductDetails");
                });

            modelBuilder.Entity("OnlineJewelleryShop.Models.User", b =>
                {
                    b.Navigation("Carts");

                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
